/*
In NativeScript, the app.ts file is the entry point to your application.
You can use this file to perform app-level initialization, but the primary
purpose of the file is to pass control to the appâ€™s first module.
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./bundle-config");
var app = require("application");
var appSettings = require("application-settings");
var firebase = require("nativescript-plugin-firebase");
console.log('about to call firebase.init');
firebase.init().then(function (instance) {
    console.log("firebase.init done");
}, function (error) {
    console.log("firebase.init error: " + error);
});
console.log('looking for stored userdata');
if (appSettings.getString('userData')) {
    var userData = JSON.parse(appSettings.getString('userData'));
    var familyCount = 0;
    if (userData.families) {
        for (var x in userData.families)
            familyCount++;
    }
    if (!userData.hourlyRate || !userData.families || !familyCount || !userData.first_name) {
        app.start({ moduleName: "views/usersetup/usersetup", backstackVisible: false });
    }
    else {
        app.start({ moduleName: "views/home/home" });
    }
}
else {
    app.start({ moduleName: "views/login/login", backstackVisible: false });
}
/*
Do not place any code after the application has been started as it will not
be executed on iOS.
*/
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUU7OztBQUVGLDJCQUF5QjtBQUN6QixpQ0FBbUM7QUFDbkMsa0RBQW9EO0FBQ3BELHVEQUF5RDtBQUV6RCxPQUFPLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUM7QUFDM0MsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLFFBQVE7SUFDMUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0FBQ3RDLENBQUMsRUFBRSxVQUFDLEtBQUs7SUFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQ2pELENBQUMsQ0FBQyxDQUFDO0FBRUgsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQzNDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzdELElBQUksV0FBVyxHQUFHLENBQUMsQ0FBQztJQUNwQixFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUNwQixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDO1lBQUMsV0FBVyxFQUFFLENBQUM7SUFDbkQsQ0FBQztJQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFVBQVUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUNyRixHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsVUFBVSxFQUFFLDJCQUEyQixFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ0osR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztBQUNMLENBQUM7QUFBQyxJQUFJLENBQUMsQ0FBQztJQUNKLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxVQUFVLEVBQUUsbUJBQW1CLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUM1RSxDQUFDO0FBR0Q7OztFQUdFIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkluIE5hdGl2ZVNjcmlwdCwgdGhlIGFwcC50cyBmaWxlIGlzIHRoZSBlbnRyeSBwb2ludCB0byB5b3VyIGFwcGxpY2F0aW9uLlxuWW91IGNhbiB1c2UgdGhpcyBmaWxlIHRvIHBlcmZvcm0gYXBwLWxldmVsIGluaXRpYWxpemF0aW9uLCBidXQgdGhlIHByaW1hcnlcbnB1cnBvc2Ugb2YgdGhlIGZpbGUgaXMgdG8gcGFzcyBjb250cm9sIHRvIHRoZSBhcHDigJlzIGZpcnN0IG1vZHVsZS5cbiovXG5cbmltcG9ydCBcIi4vYnVuZGxlLWNvbmZpZ1wiO1xuaW1wb3J0ICogYXMgYXBwIGZyb20gJ2FwcGxpY2F0aW9uJztcbmltcG9ydCAqIGFzIGFwcFNldHRpbmdzIGZyb20gJ2FwcGxpY2F0aW9uLXNldHRpbmdzJztcbmltcG9ydCAqIGFzIGZpcmViYXNlIGZyb20gJ25hdGl2ZXNjcmlwdC1wbHVnaW4tZmlyZWJhc2UnO1xuaW1wb3J0ICogYXMgZnJhbWUgZnJvbSAndWkvZnJhbWUnO1xuY29uc29sZS5sb2coJ2Fib3V0IHRvIGNhbGwgZmlyZWJhc2UuaW5pdCcpO1xuZmlyZWJhc2UuaW5pdCgpLnRoZW4oKGluc3RhbmNlKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJmaXJlYmFzZS5pbml0IGRvbmVcIik7XG59LCAoZXJyb3IpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcImZpcmViYXNlLmluaXQgZXJyb3I6IFwiICsgZXJyb3IpO1xufSk7XG5cbmNvbnNvbGUubG9nKCdsb29raW5nIGZvciBzdG9yZWQgdXNlcmRhdGEnKTtcbmlmIChhcHBTZXR0aW5ncy5nZXRTdHJpbmcoJ3VzZXJEYXRhJykpIHtcbiAgICBsZXQgdXNlckRhdGEgPSBKU09OLnBhcnNlKGFwcFNldHRpbmdzLmdldFN0cmluZygndXNlckRhdGEnKSk7XG4gICAgbGV0IGZhbWlseUNvdW50ID0gMDtcbiAgICBpZiAodXNlckRhdGEuZmFtaWxpZXMpIHtcbiAgICAgICAgZm9yICh2YXIgeCBpbiB1c2VyRGF0YS5mYW1pbGllcykgZmFtaWx5Q291bnQrKztcbiAgICB9XG4gICAgaWYgKCF1c2VyRGF0YS5ob3VybHlSYXRlIHx8ICF1c2VyRGF0YS5mYW1pbGllcyB8fCAhZmFtaWx5Q291bnQgfHwgIXVzZXJEYXRhLmZpcnN0X25hbWUpIHtcbiAgICAgICAgYXBwLnN0YXJ0KHsgbW9kdWxlTmFtZTogXCJ2aWV3cy91c2Vyc2V0dXAvdXNlcnNldHVwXCIsIGJhY2tzdGFja1Zpc2libGU6IGZhbHNlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGFwcC5zdGFydCh7IG1vZHVsZU5hbWU6IFwidmlld3MvaG9tZS9ob21lXCIgfSk7XG4gICAgfVxufSBlbHNlIHtcbiAgICBhcHAuc3RhcnQoeyBtb2R1bGVOYW1lOiBcInZpZXdzL2xvZ2luL2xvZ2luXCIsIGJhY2tzdGFja1Zpc2libGU6IGZhbHNlIH0pO1xufVxuXG5cbi8qXG5EbyBub3QgcGxhY2UgYW55IGNvZGUgYWZ0ZXIgdGhlIGFwcGxpY2F0aW9uIGhhcyBiZWVuIHN0YXJ0ZWQgYXMgaXQgd2lsbCBub3RcbmJlIGV4ZWN1dGVkIG9uIGlPUy5cbiovXG4iXX0=